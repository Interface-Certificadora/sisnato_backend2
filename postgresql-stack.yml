version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    hostname: "{{.Node.Hostname}}-postgres"
    environment:
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_PASS:-senha123}
      POSTGRES_DB: ${PG_DB:-meudb}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - target: 5432
        published: 5432
        mode: host
    volumes:
      - pgdata:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "max_connections=300"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=3GB"
      - "-c"
      - "work_mem=20MB"
      - "-c"
      - "maintenance_work_mem=256MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "effective_io_concurrency=200"
      - "-c"
      - "wal_buffers=16MB"
      - "-c"
      - "checkpoint_completion_target=0.9"
      - "-c"
      - "checkpoint_timeout=15min"
      - "-c"
      - "max_wal_size=2GB"
      - "-c"
      - "min_wal_size=1GB"
      - "-c"
      - "listen_addresses=*"
      - "-c"
      - "log_min_duration_statement=1000"
      - "-c"
      - "log_connections=on"
      - "-c"
      - "log_disconnections=on"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER:-postgres} -d ${PG_DB:-meudb}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
      resources:
        limits:
          memory: 4G
          cpus: '3.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    networks:
      - postgres_network

  pgbouncer:
    image: pgbouncer/pgbouncer:latest
    environment:
      DATABASES_HOST: postgres
      DATABASES_PORT: 5432
      DATABASES_USER: ${PG_USER:-postgres}
      DATABASES_PASSWORD: ${PG_PASS:-senha123}
      DATABASES_DBNAME: ${PG_DB:-meudb}
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 100
      MIN_POOL_SIZE: 20
      RESERVE_POOL_SIZE: 20
      MAX_DB_CONNECTIONS: 250
      SERVER_IDLE_TIMEOUT: 600
      LOG_CONNECTIONS: 1
      LOG_DISCONNECTIONS: 1
    ports:
      - target: 6432
        published: 6432
        mode: host
    # SEM HEALTHCHECK - PgBouncer é leve e estável
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 5
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    networks:
      - postgres_network

  backup:
    image: prodrigestivill/postgres-backup-local:17-alpine
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${PG_DB:-meudb}
      POSTGRES_USER: ${PG_USER:-postgres}
      POSTGRES_PASSWORD: ${PG_PASS:-senha123}
      POSTGRES_EXTRA_OPTS: "-Z9 --blobs"
      SCHEDULE: "@daily"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      HEALTHCHECK_PORT: 8080
      TZ: America/Sao_Paulo
    volumes:
      - pgbackups:/backups
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 60s
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    networks:
      - postgres_network

volumes:
  pgdata:
    driver: local
  pgbackups:
    driver: local

networks:
  postgres_network:
    external: true